// Copyright 2015 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
import "google/protobuf/any.proto";

option java_multiple_files = true;
option java_package = "io.grpc.learning.computation";
option java_outer_classname = "ComputationProto";
option objc_class_prefix = "COMP";

package computation;

// The greeting service definition.
service Computation {
  // Sends a computation
  rpc Call (ComputationRequest) returns (ComputationReply) {}

  rpc CallValue (ComputationRequest) returns (TensorValue) {}

  rpc SendValue(TensorValue) returns(ValueReply) {}
}

// The request message containing the user's id.
message ComputationRequest {
  // The client id of remote device
  string id = 1;
  // The request node name in AST
  string node_name = 2;

  int32 offset = 3;
}


// The response message containing the computation graph
message ComputationReply {
  string message = 1;
  // The Computation graph
  bytes graph = 2;
}

message TensorValue{
  string id = 1;
  string name = 2;
  int32 value_size = 3;
  int32 offset = 4;
  repeated float list_array = 5;
  repeated int32 shape_array = 6;
  TrainableVarName trainable_name = 7;
}

message TrainableVarName{
  string name = 1;
  string target_name = 2;
}

message ValueReply{
  bool message = 1;
}

